geom_point(stat="identity") +
geom_line(group = 1) +
scale_y_continuous() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(hjust = 0.5, face="bold")) +
ggtitle("Monthly Savings Rate") +
ylab("Savings Rate")
ggplot(data=CategoryGraph, aes(x=reorder(Category,-Amount), y=Amount)) +
geom_bar(stat="identity", fill="black") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(hjust = 0.5, face="bold")) +
ggtitle(paste(dateOfReport,"Spending Categories")) +
xlab("Category")
getwd()
players = readRDS("/Users/jamesthompson/Dropbox/Analytics/rocket_league_modeling/data/players.Rds")
View(players)
rank = readRDS("/Users/jamesthompson/Dropbox/Analytics/rocket_league_modeling/data/rank.Rds")
View(rank)
table(rank$game_type)
table(rank$season)
hist(rank$mmr)
plot(ecdf(rank$mmr))
table(rank$division)
table(players$platform)
plot(ecdf(players$shots))
hist(players$shots)
hist(players$saves)
library(tidyverse)
setwd("/Users/jamesthompson/Dropbox/Analytics/rocket_league_modeling/")
library(tidyverse)
players <- readRDS("data/players.Rds")
rank <- readRDS("data/rank.Rds")
colnames(players)
str(players)
str(players)
players <- readRDS("data/players.Rds")
rank <- readRDS("data/rank.Rds")
View(players)
View(players)
str(players)
players$platform
str(players$document.id)
str(players)
apply(players, 2, str)
colnames(players)
str(players$platform)
str(players$shots)
str(players$saves)
str(players$mvps)
str(players$goals)
plot(ecdf(players$shots))
plot(ecdf(players$saves))
plot(ecdf(players$mvps))
plot(ecdf(players$goals))
plot(ecdf(players$assists))
plot(ecdf(players$wins))
plot(ecdf(players$shots))
hist(players$shots)
percent_rank(players$shots)
percent_rank(players$wins)
players$wins_pr = percent_rank(players$wins)
players$wins_pr = percent_rank(players$wins)
players <- readRDS("data/players.Rds")
players = players[complete.cases(players),]
players = players %>% arrange(wins)
players = players %>% arrange(desc(wins))
players = players %>% arrange(desc(wins), desc(goals))
players = players %>% mutate(goal_pct = goals / shots)
library(corrplot)
corrplot(cor(players[,c(4:10)]))
corrplot(cor(players[,4:10]))
players[,4:10]
corrplot(cor(players[,5:11]))
corrplot(cor(players[,5:10]))
cor(players[,5:10])
corrplot(cor(players[,5:10]), type = "lower")
corrplot(cor(players[,5:10]), type = "lower", method = "number")
plot(ecdf(players$shots))
plot(ecdf(players$saves))
plot(ecdf(players$mvps))
plot(ecdf(players$goals))
plot(ecdf(players$assists))
plot(ecdf(players$wins))
players = players[complete.cases(players),]
source('~/Dropbox/Analytics/rocket_league_modeling/1-analysis.R')
players = players %>%
arrange(desc(wins), desc(goals)) %>% # arrange by wins and goals
mutate(goal_pct = goals / shots) # create goal efficiency metric
?percent_rank
players$cume_dist = cume_dist(players$wins)
?ecdf
players = players %>%
arrange(desc(wins), desc(goals)) %>% # arrange by wins and goals
mutate(goal_pct = goals / shots) %>% # create goal efficiency metric
filter(cume_dist >= 0.8)
plot(ecdf(players$wins))
players = players %>%
arrange(desc(wins), desc(goals)) %>% # arrange by wins and goals
mutate(goal_pct = goals / shots) %>% # create goal efficiency metric
filter(cume_dist >= 0.9)
plot(ecdf(players$wins))
players90 = players %>% # looking at top 10% of players
arrange(desc(wins), desc(goals)) %>% # arrange by wins and goals
mutate(goal_pct = goals / shots) %>% # create goal efficiency metric
filter(cume_dist >= 0.9)
players <- readRDS("data/players.Rds")
players = players[complete.cases(players),]
players90 = players %>%
# arrange by wins and goals
arrange(desc(wins), desc(goals)) %>%
# create goal efficiency metric
mutate(goal_pct = goals / shots) %>%
# filter for top 10% of players based on wins
filter(cume_dist >= 0.95)
players90 = players %>%
# arrange by wins and goals
arrange(desc(wins), desc(goals)) %>%
# create goal efficiency metric
mutate(goal_pct = goals / shots) %>%
# filter for top 10% of players based on wins
filter(cume_dist >= 0.95)
players$cume_dist = cume_dist(players$wins)
players90 = players %>%
# arrange by wins and goals
arrange(desc(wins), desc(goals)) %>%
# create goal efficiency metric
mutate(goal_pct = goals / shots) %>%
# filter for top 10% of players based on wins
filter(cume_dist >= 0.95)
plot(ecdf(players90$wins))
players90 = players %>%
# arrange by wins and goals
arrange(desc(wins), desc(goals)) %>%
# create goal efficiency metric
mutate(goal_pct = goals / shots) %>%
# filter for top 10% of players based on wins
filter(cume_dist >= 0.90)
plot(ecdf(players90$wins))
hist(players90$wins)
players90 %>% ggplot(aes(x = wins)) + geom_histogram(bins = 30)
players %>% ggplot(aes(x = wins)) + geom_histogram(bins = 30)
players90 %>% ggplot(aes(x = wins)) + geom_histogram(bins = 30)
players90 %>% ggplot(aes(x = wins)) +
geom_histogram(bins = 30) +
ggtitle("Win Distribution for Top 10% of Players")
?ggtheme
??theme
??ggplot::theme
??ggplot2::theme
players90 %>% ggplot(aes(x = wins)) +
geom_histogram(bins = 30) +
ggtitle("Win Distribution for Top 10% of Players")
??ggplot2::theme
players90 %>% ggplot(aes(x = wins)) +
geom_histogram(bins = 30) +
ggtitle("Win Distribution for Top 10% of Players")
players90 %>% ggplot(aes(x = wins)) +
geom_dotplot() +
ggtitle("Win Distribution for Top 10% of Players")
players90 %>% ggplot(aes(x = wins)) +
geom_histogram(bins = 30) +
ggtitle("Win Distribution for Top 10% of Players")
players90 %>% ggplot(aes(x = wins)) +
geom_density() +
ggtitle("Win Distribution for Top 10% of Players")
players90 %>% ggplot(aes(x = wins)) +
geom_density_2d() +
ggtitle("Win Distribution for Top 10% of Players")
players90 %>% ggplot(aes(x = wins, y = goal_pct)) +
geom_density_2d() +
ggtitle("Win Distribution for Top 10% of Players")
players90 %>% ggplot(aes(x = wins)) +
geom_density_2d() +
ggtitle("Win Distribution for Top 10% of Players")
players90 %>% ggplot(aes(x = wins)) +
geom_density() +
ggtitle("Win Distribution for Top 10% of Players")
players90 %>% ggplot(aes(x = wins)) +
geom_density() +
ggtitle("Win Distribution for Top 10% of Players")
players90 %>% ggplot(aes(x = wins, y = goal_pct)) +
geom_density_2d() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players90 %>% ggplot(aes(x = wins, y = goal_pct)) +
geom_density2d() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players90 %>% ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>% ggplot(aes(x = wins, y = goal_pct)) +
geom_point() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players = players %>% mutate(goal_pct = goals / shots)
players90 = players %>%
# arrange by wins and goals
arrange(desc(wins), desc(goals)) %>%
# filter for top 10% of players based on wins
filter(cume_dist >= 0.90)
players = players %>% mutate(goal_pct = goals / shots)
players %>% ggplot(aes(x = wins, y = goal_pct)) +
geom_point() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players = players[complete.cases(players),]
players %>% ggplot(aes(x = wins, y = goal_pct)) +
geom_point() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>% ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
player %>% filter(goal_pct > 1)
players %>% filter(goal_pct > 1)
players %>%
filter(goal_pct > 1) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
filter(goal_pct =< 1) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
filter(goal_pct =< 1) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
filter(goal_pct < 1) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases
filter(goal_pct =< 1) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases
filter(goal_pct < 1.001) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases
filter(goal_pct < 1) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>% filter(wins < 6) %>% count_n()
players %>% filter(wins < 6) %>% count()
players %>% filter(wins < 6) %>% count(wins)
players %>% filter(wins < 100) %>% count(wins)
View(players %>% filter(wins < 100) %>% count(wins))
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1, wins < 100) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1, wins > 100) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_jitter() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_point() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_point() +
geom_smooth() +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1) %>%
ggplot(aes(x = wins, y = goal_pct)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
cor(players$wins, players$goal_pct)
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1) %>%
ggplot(aes(x = goals, y = goal_pct)) +
geom_point() +
geom_smooth(method = lm) +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1) %>%
ggplot(aes(x = goals, y = goal_pct)) +
geom_point(alpha = 0.05) +
geom_smooth(method = lm) +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1) %>%
ggplot(aes(x = goals, y = goal_pct)) +
geom_point(alpha = 0.1) +
geom_smooth(method = lm) +
ggtitle("Win and Goal Percent Density Plot for Top 10% of Players")
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1) %>%
ggplot(aes(x = goals, y = goal_pct)) +
geom_point(alpha = 0.1) +
geom_smooth(method = lm) +
ggtitle("Goals vs Goal Percent")
players90 %>% ggplot(aes(x = wins)) +
geom_density() +
ggtitle("Win Distribution for Top 10% of Players")
players90 %>% ggplot(aes(x = wins)) +
geom_histogram(bins = 30) +
ggtitle("Win Distribution for Top 10% of Players")
players90 %>% ggplot(aes(x = wins)) +
geom_histogram(bins = 30) +
ggtitle("Win Distribution for Top 10% of Players") +
theme_classic()
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1) %>%
ggplot(aes(x = goals, y = goal_pct)) +
geom_point(alpha = 0.1) +
geom_smooth(method = lm) +
ggtitle("Goals vs Goal Percent") +
theme_minimal()
players %>%
# filter out cases where goals > shots
filter(goal_pct < 1) %>%
ggplot(aes(x = goals, y = goal_pct)) +
geom_point(alpha = 0.1) +
geom_smooth(method = lm) +
ggtitle("Goals vs Goal Percent") +
theme_bw()
players90 %>% ggplot(aes(x = wins)) +
geom_histogram(bins = 30) +
ggtitle("Win Distribution for Top 10% of Players") +
theme_bw()
colnames(players)
assists/goals
players = players %>% mutate(defense_rate = saves / shots,
selfless_rate = assists / goals)
summary(players)
players %>%
ggplot(aes(x = defense_rate)) +
geom_histogram()
players %>%
ggplot(aes(x = defense_rate)) +
geom_density()
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = defense_rate)) +
geom_density()
players = players %>% mutate(defense_rate = saves / (shots + goals),
selfless_rate = assists / goals)
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = defense_rate)) +
geom_density()
players = players %>% mutate(defense_rate = saves / (shots + goals),
selfless_rate = assists / (shots + goals))
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = defense_rate)) +
geom_density()
players %>%
ggplot(aes(x = selfless_rate)) +
geom_density()
players %>%
filter(selfless_rate < 1) %>%
ggplot(aes(x = selfless_rate)) +
geom_density()
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = defense_rate)) +
geom_density()
players %>%
filter(selfless_rate < 1) %>%
ggplot(aes(x = selfless_rate)) +
geom_density()
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = defense_rate)) +
geom_density() +
ggtitle("defense_rate") +
theme_bw()
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = defense_rate)) +
geom_density() +
ggtitle("defense rate") +
theme_bw()
players %>%
filter(selfless_rate < 1) %>%
ggplot(aes(x = selfless_rate)) +
geom_density() +
ggtitle("selfless rate") +
theme_bw()
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = defense_rate)) +
geom_histogram(bins = 30) +
ggtitle("defense rate") +
theme_bw()
players %>%
filter(selfless_rate < 1) %>%
ggplot(aes(x = selfless_rate)) +
geom_histogram(bins = 30) +
ggtitle("selfless rate") +
theme_bw()
colnames(players)
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = wins, y = defense_rate)) +
geom_point(alpha = 0.1) +
ggtitle("wins versus defense rate") +
theme_bw()
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = wins, y = defense_rate)) +
geom_point(alpha = 0.1) +
geom_smooth(lm) +
ggtitle("wins versus defense rate") +
theme_bw()
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = wins, y = defense_rate)) +
geom_smooth(lm) +
geom_point(alpha = 0.1) +
ggtitle("wins versus defense rate") +
theme_bw()
?geom_smooth
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = wins, y = defense_rate)) +
geom_smooth(method = "lm") +
geom_point(alpha = 0.1) +
ggtitle("wins versus defense rate") +
theme_bw()
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = wins, y = defense_rate)) +
geom_smooth(method = "lm") +
geom_point(alpha = 0.05) +
ggtitle("wins versus defense rate") +
theme_bw()
players %>%
filter(selfless_rate < 1) %>%
ggplot(aes(x = wins, y = selfless_rate)) +
geom_smooth(method = "lm") +
geom_point(alpha = 0.05) +
ggtitle("wins versus selfless rate") +
theme_bw()
players %>%
filter(defense_rate < 1) %>%
ggplot(aes(x = wins, y = defense_rate)) +
geom_point(alpha = 0.05) +
ggtitle("wins versus defense rate") +
theme_bw()
players %>%
filter(selfless_rate < 1) %>%
ggplot(aes(x = wins, y = selfless_rate)) +
geom_point(alpha = 0.05) +
ggtitle("wins versus selfless rate") +
theme_bw()
players %>%
filter(selfless_rate < 1) %>%
ggplot(aes(x = wins, y = selfless_rate)) +
geom_density_2d() +
ggtitle("wins versus selfless rate") +
theme_bw()
players %>%
filter(selfless_rate < 1) %>%
ggplot(aes(x = wins, y = selfless_rate)) +
geom_point(alpha = 0.05) +
ggtitle("wins versus selfless rate") +
theme_bw()
rm(players, players90, rank)
rm(list = ls)
rm(list = ls())
i = 1
j = 2
rm(list = ls())
?pmatch
fuzzy1 <- c("thomas", "sophie", "james")
fuzzy2 <- c("thimes", "sophia", "jamie")
library(tidyverse)
library(magrittr)
fuzzy2 = fuzzy2[sample(1:length(fuzzy2))]
fuzzy2
fuzzy2 = fuzzy2[sample(1:length(fuzzy2))]
fuzzy2
pmatch(fuzzy1, fuzzy2)
rm(list = ls())
